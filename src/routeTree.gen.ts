/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as NotesRouteImport } from './routes/notes'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProjectsIndexRouteImport } from './routes/projects/index'
import { Route as NotesIndexRouteImport } from './routes/notes/index'
import { Route as LabIndexRouteImport } from './routes/lab/index'
import { Route as ProjectsSlugRouteImport } from './routes/projects/$slug'
import { Route as NotesNoteIdRouteImport } from './routes/notes/$noteId'
import { Route as LabSpinningCubeRouteImport } from './routes/lab/spinning-cube'
import { Route as LabSnake3dRouteImport } from './routes/lab/snake-3d'

const NotesRoute = NotesRouteImport.update({
  id: '/notes',
  path: '/notes',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsIndexRoute = ProjectsIndexRouteImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => rootRouteImport,
} as any)
const NotesIndexRoute = NotesIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => NotesRoute,
} as any)
const LabIndexRoute = LabIndexRouteImport.update({
  id: '/lab/',
  path: '/lab/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsSlugRoute = ProjectsSlugRouteImport.update({
  id: '/projects/$slug',
  path: '/projects/$slug',
  getParentRoute: () => rootRouteImport,
} as any)
const NotesNoteIdRoute = NotesNoteIdRouteImport.update({
  id: '/$noteId',
  path: '/$noteId',
  getParentRoute: () => NotesRoute,
} as any)
const LabSpinningCubeRoute = LabSpinningCubeRouteImport.update({
  id: '/lab/spinning-cube',
  path: '/lab/spinning-cube',
  getParentRoute: () => rootRouteImport,
} as any)
const LabSnake3dRoute = LabSnake3dRouteImport.update({
  id: '/lab/snake-3d',
  path: '/lab/snake-3d',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/notes': typeof NotesRouteWithChildren
  '/lab/snake-3d': typeof LabSnake3dRoute
  '/lab/spinning-cube': typeof LabSpinningCubeRoute
  '/notes/$noteId': typeof NotesNoteIdRoute
  '/projects/$slug': typeof ProjectsSlugRoute
  '/lab': typeof LabIndexRoute
  '/notes/': typeof NotesIndexRoute
  '/projects': typeof ProjectsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/lab/snake-3d': typeof LabSnake3dRoute
  '/lab/spinning-cube': typeof LabSpinningCubeRoute
  '/notes/$noteId': typeof NotesNoteIdRoute
  '/projects/$slug': typeof ProjectsSlugRoute
  '/lab': typeof LabIndexRoute
  '/notes': typeof NotesIndexRoute
  '/projects': typeof ProjectsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/notes': typeof NotesRouteWithChildren
  '/lab/snake-3d': typeof LabSnake3dRoute
  '/lab/spinning-cube': typeof LabSpinningCubeRoute
  '/notes/$noteId': typeof NotesNoteIdRoute
  '/projects/$slug': typeof ProjectsSlugRoute
  '/lab/': typeof LabIndexRoute
  '/notes/': typeof NotesIndexRoute
  '/projects/': typeof ProjectsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/notes'
    | '/lab/snake-3d'
    | '/lab/spinning-cube'
    | '/notes/$noteId'
    | '/projects/$slug'
    | '/lab'
    | '/notes/'
    | '/projects'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/lab/snake-3d'
    | '/lab/spinning-cube'
    | '/notes/$noteId'
    | '/projects/$slug'
    | '/lab'
    | '/notes'
    | '/projects'
  id:
    | '__root__'
    | '/'
    | '/notes'
    | '/lab/snake-3d'
    | '/lab/spinning-cube'
    | '/notes/$noteId'
    | '/projects/$slug'
    | '/lab/'
    | '/notes/'
    | '/projects/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  NotesRoute: typeof NotesRouteWithChildren
  LabSnake3dRoute: typeof LabSnake3dRoute
  LabSpinningCubeRoute: typeof LabSpinningCubeRoute
  ProjectsSlugRoute: typeof ProjectsSlugRoute
  LabIndexRoute: typeof LabIndexRoute
  ProjectsIndexRoute: typeof ProjectsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/notes': {
      id: '/notes'
      path: '/notes'
      fullPath: '/notes'
      preLoaderRoute: typeof NotesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/': {
      id: '/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/notes/': {
      id: '/notes/'
      path: '/'
      fullPath: '/notes/'
      preLoaderRoute: typeof NotesIndexRouteImport
      parentRoute: typeof NotesRoute
    }
    '/lab/': {
      id: '/lab/'
      path: '/lab'
      fullPath: '/lab'
      preLoaderRoute: typeof LabIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/$slug': {
      id: '/projects/$slug'
      path: '/projects/$slug'
      fullPath: '/projects/$slug'
      preLoaderRoute: typeof ProjectsSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/notes/$noteId': {
      id: '/notes/$noteId'
      path: '/$noteId'
      fullPath: '/notes/$noteId'
      preLoaderRoute: typeof NotesNoteIdRouteImport
      parentRoute: typeof NotesRoute
    }
    '/lab/spinning-cube': {
      id: '/lab/spinning-cube'
      path: '/lab/spinning-cube'
      fullPath: '/lab/spinning-cube'
      preLoaderRoute: typeof LabSpinningCubeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/lab/snake-3d': {
      id: '/lab/snake-3d'
      path: '/lab/snake-3d'
      fullPath: '/lab/snake-3d'
      preLoaderRoute: typeof LabSnake3dRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface NotesRouteChildren {
  NotesNoteIdRoute: typeof NotesNoteIdRoute
  NotesIndexRoute: typeof NotesIndexRoute
}

const NotesRouteChildren: NotesRouteChildren = {
  NotesNoteIdRoute: NotesNoteIdRoute,
  NotesIndexRoute: NotesIndexRoute,
}

const NotesRouteWithChildren = NotesRoute._addFileChildren(NotesRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  NotesRoute: NotesRouteWithChildren,
  LabSnake3dRoute: LabSnake3dRoute,
  LabSpinningCubeRoute: LabSpinningCubeRoute,
  ProjectsSlugRoute: ProjectsSlugRoute,
  LabIndexRoute: LabIndexRoute,
  ProjectsIndexRoute: ProjectsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
